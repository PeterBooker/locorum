user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent"';

    access_log  /var/log/nginx/access.log  main;

    include /etc/nginx/snippets/sites.map.conf;
    include /etc/nginx/snippets/sites.upstreams.conf;

    # --------------------------------------------------------------------
    # Health-check server (HTTP)
    # --------------------------------------------------------------------
    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;

        # Health endpoint returns 200 OK plain-text
        location = /health {
            add_header Content-Type text/plain;
            return 200 'OK';
        }

        # Everything else â†’ HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # --------------------------------------------------------------------
    # HTTPS + SNI proxy
    # --------------------------------------------------------------------
    server {
        listen              443 ssl http2 default_server;
        listen              [::]:443 ssl http2 default_server;
        server_name         _;

        # Health endpoint over HTTPS too (optional)
        location = /health {
            add_header Content-Type text/plain;
            return 200 'OK';
        }

        ssl_certificate     /etc/nginx/certs/wildcard.local.crt;
        ssl_certificate_key /etc/nginx/certs/wildcard.local.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options           "SAMEORIGIN" always;
        add_header X-Content-Type-Options    "nosniff" always;

        location / {
            if ($site_upstream = "") {
                return 404;
            }
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass http://$site_upstream;
        }
    }
}